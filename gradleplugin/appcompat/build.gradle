apply plugin: 'com.android.library'
archivesBaseName = 'appcompat-v7'

dependencies {
    compile 'com.android.support:support-annotations:25.4.0'
    compile 'com.android.support:support-v4:25.4.0'
    compile 'com.android.support:support-vector-drawable:25.4.0'
    compile 'com.android.support:animated-vector-drawable:25.4.0'

//    compile project(':support-annotations')
//    compile project(':support-v4')
//    compile project(':support-vector-drawable')
//    compile project(':support-animated-vector-drawable')

//    androidTestCompile ("com.android.support.test:runner:${project.rootProject.ext.testRunnerVersion}") {
//        exclude module: 'support-annotations'
//    }
//    androidTestCompile ("com.android.support.test.espresso:espresso-core:${project.rootProject.ext.espressoVersion}") {
//        exclude module: 'support-annotations'
//    }
//    androidTestCompile 'org.mockito:mockito-core:1.9.5'
//    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
//    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
//    testCompile 'junit:junit:4.12'
}

android {
    compileSdkVersion 25

    defaultConfig {
        minSdkVersion 9
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // This disables the builds tools automatic vector -> PNG generation
        generatedDensities = []
    }

    sourceSets {
        main.manifest.srcFile 'AndroidManifest.xml'
        main.java.srcDir 'src'
        main.res.srcDirs 'res', 'res-public'
        main.assets.srcDir 'assets'
        main.resources.srcDir 'src'

        androidTest.setRoot('tests')
        androidTest.java.srcDir 'tests/src'
        androidTest.res.srcDir 'tests/res'
        androidTest.manifest.srcFile 'tests/AndroidManifest.xml'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
    }
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name

    if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
        return; // Skip debug builds.
    }
    def suffix = name.capitalize()

    def sourcesJarTask = project.tasks.create(name: "sourceJar${suffix}", type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    artifacts.add('archives', sourcesJarTask);
}

uploadArchives {
    repositories {
//        mavenDeployer {
//            repository(url: uri(rootProject.ext.supportRepoOut)) {
//            }
//
//            pom.project {
//                name 'Android AppCompat Library v7'
//                description "The Support Library is a static library that you can add to your Android application in order to use APIs that are either not available for older platform versions or utility APIs that aren't a part of the framework APIs. Compatible on devices running API 4 or later."
//                url 'http://developer.android.com/tools/extras/support-library.html'
//                inceptionYear '2011'
//
//                licenses {
//                    license {
//                        name 'The Apache Software License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                        distribution 'repo'
//                    }
//                }
//
//                scm {
//                    url "http://source.android.com"
//                    connection "scm:git:https://android.googlesource.com/platform/frameworks/support"
//                }
//                developers {
//                    developer {
//                        name 'The Android Open Source Project'
//                    }
//                }
//            }
//        }
    }
}